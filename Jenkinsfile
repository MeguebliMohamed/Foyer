pipeline {
    agent any

    tools {
        maven 'M2_HOME'    // Nom exact de Maven configur√© dans Jenkins
        jdk 'JAVA_HOME'     // Nom exact du JDK configur√© dans Jenkins
    }

    environment {
        GIT_REPO_URL = 'https://github.com/MeguebliMohamed/Foyer.git'
        SONARQUBE_SERVER = 'SonarQube'                // Nom du serveur SonarQube dans Jenkins
        SONARQUBE_TOKEN = credentials('sonar-token')  // ID du token SonarQube (Secret Text)
    }

    stages {
        stage('Pull from Git') {
            steps {
                echo 'üì• Clonage du projet depuis GitHub...'
                git branch: 'main', url: "${GIT_REPO_URL}"
            }
        }

        stage('Clean Project') {
            steps {
                echo 'üßπ Nettoyage du projet...'
                sh 'mvn clean'
            }
        }

        stage('Compile Project') {
            steps {
                echo '‚öô Compilation du projet...'
                sh 'mvn compile'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                echo 'üîç Analyse du code avec SonarQube...'
                withSonarQubeEnv("${SONARQUBE_SERVER}") {
                    sh """
                        mvn sonar:sonar \
                        -Dsonar.projectKey=tp-foyer \
                        -Dsonar.host.url=$SONAR_HOST_URL \
                        -Dsonar.login=$SONARQUBE_TOKEN
                    """
                    echo "üîó R√©sultats SonarQube : $SONAR_HOST_URL/dashboard?id=tp-foyer"
                }
            }
        }

        stage('Build JAR') {
            steps {
                echo 'üì¶ G√©n√©ration du fichier JAR...'
                sh 'mvn package -DskipTests'
            }
        }

        stage('Archive Artifact') {
            steps {
                echo 'üóÉ Archivage du JAR g√©n√©r√©...'
                archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
            }
        }
    }

    post {
        success {
            echo '‚úÖ Pipeline ex√©cut√© avec succ√®s !'
        }
        failure {
            echo '‚ùå Le pipeline a √©chou√©. V√©rifiez les logs Jenkins.'
        }
    }
}